---
swagger: '2.0'
info:
  description: A REST interface for state queries, transaction generation, signing, and broadcast.
  version: "0.10.0"
  title: IRISLCD Swagger-UI
  termsOfService: https://www.irisnet.org
  contact:
    name: 边界智能
    url: https://bianjie.ai/
    email: service@bianjie.ai
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: ICS0
  description: Tendermint APIs, such as query blocks, transactions and validatorset
- name: ICS1
  description: Key management APIs
- name: ICS20
  description: Create, sign and broadcast transactions
- name: ICS21
  description: Stake module APIs
- name: ICS22
  description: Governance module APIs
- name: ICS23
  description: Slashing module APIs
- name: ICS24
  description: Distribution module APIs
- name: ICS25
  description: Service module APIs
- name: version
  description: Query app version
paths:
  /version:
    get:
      summary: Version of irislcd
      tags:
      - version
      description: Get the version of irislcd running locally to compare against expected
      responses:
        200:
          description: Plaintext version i.e. "v0.7.0"
  /node_version:
    get:
      summary: Version of the connected node
      tags:
      - version
      description: Get the version of the SDK running on the connected node to compare against expected
      responses:
        200:
          description: Plaintext version i.e. "v0.7.0"
        500:
          description: failed to query node version
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
      - ICS0
      produces:
      - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              id:
                type: string
              moniker:
                type: string
                example: validator-name
              network:
                type: string
                example: irishub-mainnet
              channels:
                type: string
              listen_addr:
                type: string
                example: 192.168.56.1:26656
              version:
                description: Tendermint version
                type: string
                example: 0.7.0
              other:
                description: more information on versions
                type: array
                items:
                  type: string
        500:
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
      - ICS0
      description: Get if the node is currently syning with other nodes
      responses:
        200:
          description: node sync status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
                example: false
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
      - ICS0
      produces:
      - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      summary: Get a block at a certain height
      tags:
      - ICS0
      produces:
      - application/json
      parameters:
      - in: path
        name: height
        description: Block height
        required: true
        type: number
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
      - ICS0
      produces:
      - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: number
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      summary: Get a validator set a certain height
      tags:
      - ICS0
      produces:
      - application/json
      parameters:
      - in: path
        name: height
        description: Block height
        required: true
        type: number
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: number
              validators:
                type: array
                items:
                  $ref: "#/definitions/TendermintValidator"
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      summary: Get a Tx by hash
      tags:
      - ICS0
      produces:
      - application/json
      parameters:
      - in: path
        name: hash
        description: Tx hash
        required: true
        type: string
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/TxQuery"
        500:
          description: Internal Server Error
  /txs:
    get:
      tags:
      - ICS0
      summary: Search transactions
      description: Search transactions by tag(s).
      produces:
      - application/json
      parameters:
      - in: query
        name: tag
        type: string
        description: "transaction tags such as 'action=submit-proposal' and 'proposer=faa1xp8ptallwun6p0hv5ym4adruupc8q5djc95k30' which results in the following endpoint: 'GET /txs?action=submit-proposal&proposer=faa1xp8ptallwun6p0hv5ym4adruupc8q5djc95k30'"
        required: true
      - in: query
        name: page
        description: Pagination page, default value 0
        type: integer
      - in: query
        name: size
        description: Pagination size, default value 100
        type: integer
      responses:
        200:
          description: All Tx matching the provided tags
          schema:
            type: array
            items:
              $ref: "#/definitions/TxQuery"
        400:
          description: Invalid search tags
        500:
          description: Internal Server Error
    post:
      tags:
      - ICS0
      summary: broadcast Tx
      description: broadcast tx with tendermint rpc
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: broadcastTxBody
        description: Build a StdTx transaction and serilize it to a byte array with amino, then the `"tx"` field in the post body will be the base64 encoding of the byte array. The supported return types includes `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
        required: true
        schema:
          type: object
          properties:
            tx:
              type: string
            return:
              type: string
              example: block
      responses:
        200:
          description: Broadcast tx result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error

  /tx/sign:
    post:
      tags:
      - ICS20
      summary: Sign a transation
      description: Sign a transation providing locally stored account and according password, return a StdTx with amino encoding signature and public key
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: sendToken
        description: sign tx
        required: true
        schema:
          type: object
          properties:
            tx:
              $ref: "#/definitions/StdTx"
            name:
              type: string
            password:
              type: string
            chain_id:
              type: string
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "0"
            append_sig:
              type: boolean
              example: true
      responses:
        200:
          description: The signed Tx
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: The Tx was malformated or key doesn't exist
        401:
          description: Key password is wrong
        500:
          description: Server internal error
  /tx/broadcast:
    post:
      tags:
      - ICS20
      summary: Broadcast a signed StdTx with amino encoding signature and public key
      description: Broadcast a signed StdTx with amino encoding signature and public key to full iris node
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: body
        name: broadcastTxBody
        description: broadcast tx
        required: true
        schema:
          type: object
          properties:
            tx:
              $ref: "#/definitions/StdTx"
      responses:
        200:
          description: Tx was send and will probably be added to the next block
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: The Tx was malformated
        500:
          description: Server internal error
  /txs/send:
    post:
      summary: Send non-amino encoding transaction
      description: Send non-amino encoding transaction
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - ICS20
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - description: stdTx
        name: sendTxBody
        in: body
        required: true
        schema:
          type: object
          properties:
            memo:
              type: string
            fee:
              type: object
              properties:
                gas:
                  type: string
                  example: "10000"
                amount:
                  type: array
                  items:
                    $ref: "#/definitions/Coin"
            msgs:
              type: array
              items:
                $ref: "#/definitions/Msg"
            signatures:
              type: array
              items:
                type: object
                properties:
                  pub_key:
                    type: string
                  signature:
                    type: string
                  account_number:
                    type: string
                    example: "0"
                  sequence:
                    type: string
                    example: "0"
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /bank/coin/{coin-type}:
    get:
      tags:
      - ICS20
      summary: Get coin type
      description: Get the detailed information about the given coin type
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: coin-type
        in: path
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              name:
                type: string
              desc:
                type: string
              min_unit:
                type: object
                properties:
                  denom:
                    type: string
                  decimal:
                    type: integer
              Units:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    decimal:
                      type: integer
              origin:
                type: integer
        400:
          description: Bad Request
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /bank/token-stats:
    get:
      tags:
      - ICS20
      summary: Get token statistics
      description: Get token statistics, such as total loosen token, total bonded token and total burned token
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              loosen_token:
                type: array
                items:
                  type: string
              bonded_token:
                type: string
              burned_token:
                type: array
                items:
                  type: string
        500:
          description: Internal Server Error
  /bank/balances/{address}:
    get:
      summary: Get the account information on blockchain
      tags:
      - ICS20
      produces:
      - application/json
      parameters:
      - in: path
        name: address
        description: Account address
        required: true
        type: string
      responses:
        200:
          description: Account information on the blockchain
          schema:
            type: array
            items:
              $ref: "#/definitions/Coin"
        204:
          description: No content about this account address
        500:
          description: Server internel error
  /bank/accounts/{address}/transfers:
    post:
      summary: Send coins (build -> sign -> send)
      description: Send coins (build -> sign -> send)
      tags:
      - ICS20
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: address
        description: Account address in bech32 format
        required: true
        type: string
      - in: body
        name: sendBody
        description: Parameters to send coins
        required: true
        schema:
          type: object
          properties:
            base_tx:
              $ref: "#/definitions/BaseTx"
            sender:
              $ref: "#/definitions/Address"
            amount:
              type: string
              example: "1iris"
      responses:
        200:
          description: Tx was send and will probably be added to the next block
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid request
        401:
          description: Key password is wrong
        500:
          description: Server internal error
  /bank/burn:
    post:
      summary: Burn coins
      description: Burn coins
      tags:
      - ICS20
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: body
        name: burnBory
        description: Parameters to burn coins
        required: true
        schema:
          type: object
          properties:
            base_tx:
              $ref: "#/definitions/BaseTx"
            owner:
              $ref: "#/definitions/Address"
            amount:
              type: string
              example: "1iris"
      responses:
        200:
          description: Tx was send and will probably be added to the next block
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid request
        401:
          description: Key password is wrong
        500:
          description: Server internal error

  /keys:
    get:
      summary: List of accounts stored locally
      tags:
      - ICS1
      produces:
      - application/json
      responses:
        200:
          description: Array of accounts
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyOutput'
        500:
          description: Server internal error
    post:
      summary: Create a new account locally
      tags:
      - ICS1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: account
        description: The account to create
        schema:
          type: object
          required:
          - name
          - password
          - seed
          properties:
            name:
              type: string
            password:
              type: string
            seed:
              type: string
      responses:
        200:
          description: Returns account information of the created key
          schema:
            $ref: "#/definitions/KeyOutput"
        400:
          description: Invalid request
        409:
          description: Key name confliction
        500:
          description: Server internal error
  /keys/seed:
    get:
      summary: Create a new seed to create a new account with
      tags:
      - ICS1
      produces:
      - application/json
      responses:
        200:
          description: 24 word Seed
          schema:
            type: object
            properties:
              seed:
                type: string
                example: blossom pool issue kidney elevator blame furnace winter account merry vessel security depend exact travel bargain problem jelly rural net again mask roast chest
  /keys/{name}/recover:
    post:
      summary: Recover a account from a seed
      tags:
      - ICS1
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: name
        description: Account name
        required: true
        type: string
      - in: body
        name: pwdAndSeed
        description: Provide password and seed to recover a key
        schema:
          type: object
          required:
          - password
          - seed
          properties:
            password:
              type: string
            seed:
              type: string
      responses:
        200:
          description: Returns account information of the recovered key
          schema:
            $ref: "#/definitions/KeyOutput"
        400:
          description: Invalid request
        409:
          description: Key name confliction
        500:
          description: Server internal error
  /keys/{name}:
    parameters:
    - in: path
      name: name
      description: Account name
      required: true
      type: string
    get:
      summary: Get a certain locally stored account
      tags:
      - ICS1
      parameters:
      - in: query
        name: bech
        description: Bech32 prefix encoding, valid prefix `"acc"`, `"val"`, `"cons"`
        required: false
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Locally stored account
          schema:
            $ref: "#/definitions/KeyOutput"
        404:
          description: Key doesn't exist
    put:
      summary: Update the password for this account in the KMS
      tags:
      - ICS1
      consumes:
      - application/json
      parameters:
      - in: body
        name: account
        description: The new and old password
        schema:
          type: object
          required:
          - new_password
          - old_password
          properties:
            new_password:
              type: string
            old_password:
              type: string
      responses:
        200:
          description: Updated password
        401:
          description: Key password is wrong
        404:
          description: Key doesn't exist
    delete:
      summary: Remove an account
      tags:
      - ICS1
      consumes:
      - application/json
      parameters:
      - in: body
        name: account
        description: The password of the account to remove from the KMS
        schema:
          type: object
          required:
          - password
          properties:
            password:
              type: string
      responses:
        200:
          description: Removed account
        401:
          description: Key password is wrong
        404:
          description: Key doesn't exist
  /auth/accounts/{address}:
    get:
      summary: Get the account information on blockchain
      tags:
      - ICS1
      produces:
      - application/json
      parameters:
      - in: path
        name: address
        description: Account address
        required: true
        type: string
      responses:
        200:
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  account_number:
                    type: string
                  address:
                    type: string
                  coins:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                  public_key:
                    type: string
                  sequence:
                    type: string
        204:
          description: No content about this account address
        500:
          description: Server internel error

  /stake/delegators/{delegatorAddr}/delegate:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    post:
      summary: Submit delegation
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: body
        name: delegate
        description: The password of the account to remove from the KMS
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            delegate:
              type: object
              properties:
                validator_addr:
                  $ref: "#/definitions/ValidatorAddress"
                delegation:
                  type: string
                  example: 10iris
      tags:
      - ICS21
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /stake/delegators/{delegatorAddr}/redelegate:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    post:
      summary: Submit redelegation
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: body
        name: redelegate
        description: The password of the account to remove from the KMS
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            redelegate:
              type: object
              properties:
                validator_src_addr:
                  $ref: "#/definitions/ValidatorAddress"
                validator_dst_addr:
                  $ref: "#/definitions/ValidatorAddress"
                shares:
                  type: string
                  example: "100"
      tags:
      - ICS21
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /stake/delegators/{delegatorAddr}/unbond:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    post:
      summary: Submit unbonding
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: body
        name: delegation
        description: The password of the account to remove from the KMS
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            unbond:
              type: object
              properties:
                validator_addr:
                  $ref: "#/definitions/ValidatorAddress"
                shares:
                  type: string
                  example: "100"
      tags:
      - ICS21
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /stake/delegators/{delegatorAddr}/delegations:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Get all delegations from a delegator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              "$ref": "#/definitions/Delegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /stake/delegators/{delegatorAddr}/unbonding_delegations:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              "$ref": "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/redelegations:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Get all redelegations from a delegator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              "$ref": "#/definitions/Redelegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/validators:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/validators/{validatorAddr}:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    - in: path
      name: validatorAddr
      description: Bech32 ValAddress of Delegator
      required: true
      type: string
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/txs:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TxQuery"
        204:
          description: No staking transaction about this delegator address
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /stake/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              "$ref": "#/definitions/UnbondingDelegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /stake/validators:
    get:
      summary: Get all validator candidates
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Validator"
        500:
          description: Internal Server Error
  /stake/validators/{validatorAddr}:
    parameters:
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Query the information from a single validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Validator"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /stake/validators/{validatorAddr}/delegations:
    parameters:
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Get all delegations from a validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Delegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /stake/validators/{validatorAddr}/unbonding_delegations:
    parameters:
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Get all unbonding delegations from a validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UnbondingDelegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /stake/validators/{validatorAddr}/redelegations:
    parameters:
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Get all outgoing redelegations from a validator
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Redelegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /stake/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              loose_tokens:
                type: string
              bonded_tokens:
                type: string
              total_supply:
                type: string
              bonded_ratio:
                type: string
        500:
          description: Internal Server Error
  /stake/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
      - ICS21
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              unbonding_time:
                type: string
              max_validators:
                type: integer
              bond_denom:
                type: string
        500:
          description: Internal Server Error

  /slashing/validators/{validatorPubKey}/signing_info:
    get:
      summary: Get sign info of given validator
      description: Get sign info of given validator
      produces:
      - application/json
      tags:
      - ICS23
      parameters:
      - type: string
        description: Bech32 validator public key
        name: validatorPubKey
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              start_height:
                type: string
              index_offset:
                type: string
              jailed_until:
                type: string
              missed_blocks_counter:
                type: string
        204:
          description: No sign info of this validator
        400:
          description: Invalid validator public key
        500:
          description: Internal Server Error
  /slashing/validators/{validatorAddr}/unjail:
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - ICS23
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - type: string
        description: Bech32 validator operator address
        name: validatorAddr
        required: true
        in: path
      - description: ''
        name: UnjailBody
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid validator address or base_tx
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - description: valid value of `"proposal_type"` can be `"Text"`, `"ParameterChange"`, `"SoftwareUpgrade"`
        name: post_proposal_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            title:
              type: string
            description:
              type: string
            proposal_type:
              type: string
              example: "Text"
            proposer:
              "$ref": "#/definitions/Address"
            initial_deposit:
              type: string
              example: "10iris"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - in: query
        name: voter
        description: voter address
        required: false
        type: string
      - in: query
        name: depositor
        description: depositor address
        required: false
        type: string
      - in: query
        name: status
        description: proposal status, valid values can be `"DepositPeriod"`, `"VotingPeriod"`, `"Passed"`, `"Rejected"`
        required: false
        type: string
      - in: query
        name: limit
        description: limit to latest [number] proposals. Defaults to all proposals
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/TextProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits:
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - type: string
        description: proposal id
        name: proposalId
        required: true
        in: path
      - description: ''
        name: post_deposit_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            depositor:
              "$ref": "#/definitions/Address"
            amount:
              type: string
              example: 10iris
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or deposit body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - type: string
        name: proposalId
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Deposit"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes:
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - type: string
        description: proposal id
        name: proposalId
        required: true
        in: path
      - description: valid value of `"option"` field can be `"Yes"`, `"No"`, `"NoWithVeto"` and `"Abstain"`
        name: post_vote_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            voter:
              "$ref": "#/definitions/Address"
            option:
              type: string
              example: "Yes"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or vote body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
    get:
      summary: Query voters
      description: Query voters information by proposalId
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - type: string
        description: proposal id
        name: proposalId
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/Vote"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}:
    get:
      summary: Query a proposal
      description: Query a proposal by id
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - type: string
        name: proposalId
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/TextProposal"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - type: string
        description: proposal id
        name: proposalId
        required: true
        in: path
      - type: string
        description: Bech32 depositor address
        name: depositor
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id or depositor address
        404:
          description: Found no deposit
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      summary: Query vote
      description: Query vote information by proposalId and voter address
      produces:
      - application/json
      tags:
      - ICS22
      parameters:
      - type: string
        description: proposal id
        name: proposalId
        required: true
        in: path
      - type: string
        description: Bech32 voter address
        name: voter
        required: true
        in: path
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id or voter address
        404:
          description: Found no vote
        500:
          description: Internal Server Error
  /gov/params:
    get:
      summary: Query governance parameters
      description: Query governance parameters
      produces:
      - application/json
      tags:
      - ICS22
      responses:
        200:
          description: OK
          #TODO add response schema
        500:
          description: Internal Server Error

  /distribution/{delegatorAddr}/withdrawAddress:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    post:
      summary: Set withdraw address
      tags:
      - ICS24
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: withdraw_address_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            withdraw_address:
              "$ref": "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
    get:
      summary: Query withdraw address
      tags:
      - ICS24
      responses:
        200:
          description: OK
          schema:
            type: string
            example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
        400:
          description: Invalid delegator address
        204:
          description: No other address have been specified as withdraw address, delegator address will be used.
        500:
          description: Internal Server Error
  /distribution/{delegatorAddr}/withdrawReward:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    post:
      summary: Withdraw rewards
      tags:
      - ICS24
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: withdraw_reward_body
        description: if is_validator is true, validator_address should not be presented
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            validator_address:
              "$ref": "#/definitions/Address"
            is_validator:
              type: boolean
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/{delegatorAddr}/distrInfo/{validatorAddr}:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    - in: path
      name: validatorAddr
      description: Bech32 OperatorAddress of validator
      required: true
      type: string
    get:
      summary: Query distribution information for a delegation
      tags:
      - ICS24
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DelegationDistInfo"
        204:
          description: No content
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /distribution/{delegatorAddr}/distrInfos:
    parameters:
    - in: path
      name: delegatorAddr
      description: Bech32 AccAddress of Delegator
      required: true
      type: string
    get:
      summary: Query distribution information list for a given delegator
      tags:
      - ICS24
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DelegationDistInfo"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /distribution/{validatorAddr}/valDistrInfo:
    parameters:
    - in: path
      name: validatorAddr
      description: Bech32 ValAddress of Validator
      required: true
      type: string
    get:
      summary: Query withdraw address
      tags:
      - ICS24
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              operator_addr:
                type: string
              fee_pool_withdrawal_height:
                type: string
                example: "0"
              del_accum:
                type: object
                properties:
                  update_height:
                    type: string
                    example: "0"
                  accum:
                    type: string
                    example: "0.0000000000"
              del_pool:
                type: string
                example: "0.1iris"
              val_commission:
                type: string
                example: "0.1iris"
        400:
          description: Invalid delegator address
        204:
          description: Invalid delegator address
        500:
          description: Internal Server Error

  /service/definition:
    post:
      summary: Add a service definition
      description: Send transaction to define a service
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: service_define_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            service_name:
              type: string
            service_description:
              type: string
            tags:
              type: array
              items:
                type: string
            idl_content:
              type: string
            author_addr:
              "$ref": "#/definitions/Address"
            author_description:
              type: string
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service define body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/definition/{defChainId}/{serviceName}:
    parameters:
    - in: path
      name: defChainId
      description: service defined chain id
      required: true
      type: string
    - in: path
      name: serviceName
      description: service name
      required: true
      type: string
    get:
      summary: Query service definition
      description: Query a service definition
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              definition:
                type: object
                properties:
                  name:
                    type: string
                  chain_id:
                    type: string
                  description:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
                  author:
                    type: string
                  author_description:
                    type: string
                  idl_content:
                    type: string
              methods:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    output_privacy:
                      type: string
                    output_cached:
                      type: string
        400:
          description: Bad Request
        204:
          description: No service definition
        500:
          description: Internal Server Error

  /service/binding:
    post:
      summary: Add a service binding
      description: Send transaction to add a binding to a service definition
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: service_bind_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            def_chain_id:
              type: string
            service_name:
              type: string
            binding_type:
              type: string
            deposit:
              type: string
              example: "1iris"
            prices:
              type: array
              items:
                type: string
                example: "1iris"
            level:
              type: object
              properties:
                avg_rsp_time:
                  type: integer
                usable_time:
                  type: integer
            provider:
              $ref: "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service bind body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/binding/{defChainId}/{serviceName}/{bindChainId}/{provider}:
    parameters:
    - in: path
      name: defChainId
      description: service defined chain id
      required: true
      type: string
    - in: path
      name: serviceName
      description: service name
      required: true
      type: string
    - in: path
      name: bindChainId
      description: service bound chain id
      required: true
      type: string
    - in: path
      name: provider
      description: service provider address
      required: true
      type: string
    get:
      summary: Query service binding
      description: Query a service binding
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  def_name:
                    type: string
                  def_chain_id:
                    type: string
                  bind_chain_id:
                    type: string
                  provider:
                    type: string
                  binding_type:
                    type: string
                  deposit:
                    type: string
                    example: "1iris"
                  prices:
                    type: array
                    items:
                      type: string
                      example: "1iris"
                  level:
                    type: object
                    properties:
                      avg_rsp_time:
                        type: integer
                      usable_time:
                        type: integer
                  available:
                    type: boolean
                  disable_time:
                    type: string
        400:
          description: Bad Request
        204:
          description: No service binding
        500:
          description: Internal Server Error

  /service/bindings/{defChainId}/{serviceName}:
    parameters:
    - in: path
      name: defChainId
      description: service defined chain id
      required: true
      type: string
    - in: path
      name: serviceName
      description: service name
      required: true
      type: string
    get:
      summary: Query service binding list
      description: Query service binding list
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              properties:
                type:
                  type: string
                value:
                  type: object
                  properties:
                    def_name:
                      type: string
                    def_chain_id:
                      type: string
                    bind_chain_id:
                      type: string
                    provider:
                      type: string
                    binding_type:
                      type: string
                    deposit:
                      type: string
                      example: "1iris"
                    prices:
                      type: array
                      items:
                        type: string
                        example: "1iris"
                    level:
                      type: object
                      properties:
                        avg_rsp_time:
                          type: integer
                        usable_time:
                          type: integer
                    available:
                      type: boolean
                    disable_time:
                      type: string
        400:
          description: Bad Request
        204:
          description: No service binding
        500:
          description: Internal Server Error

  /service/binding/{defChainId}/{serviceName}/{provider}:
    put:
      summary: Update a service binding
      description: Send transaction to update a service binding
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        type: string
      - name: service_binding_update_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            def_chain_id:
              type: string
            service_name:
              type: string
            binding_type:
              type: string
            deposit:
              type: string
              example: "1iris"
            prices:
              type: array
              items:
                type: string
                example: "1iris"
            level:
              type: object
              properties:
                avg_rsp_time:
                  type: integer
                usable_time:
                  type: integer
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service binding update body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/binding/{defChainId}/{serviceName}/{provider}/disable:
    put:
      summary: Disable service binding
      description: Send transaction to diasble a service binding
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        type: string
      - name: service_binding_disable_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service binding disable body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/binding/{defChainId}/{serviceName}/{provider}/enable:
    put:
      summary: Enable service binding
      description: Send transaction to enable a service binding
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        type: string
      - name: service_binding_enable_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            deposit:
              type: string
              example: "1iris"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service binding enable body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/binding/{defChainId}/{serviceName}/{provider}/deposit/refund:
    put:
      summary: Refund deposit from a service binding
      description: Send transaction to refund deposit from a service binding
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        type: string
      - name: service_binding_deposit_refund_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service binding deposit refund body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/request:
    post:
      summary: Call service
      description: Send transaction to call a method of service which a provider bound it
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: service_request_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            requests:
              type: array
              items:
                properties:
                  def_chain_id:
                    type: string
                  service_name:
                    type: string
                  bind_chain_id:
                    type: string
                  method_id:
                    type: integer
                  service_fee:
                    type: string
                    example: "1iris"
                  data:
                    type: string
                  provider:
                    "$ref": "#/definitions/Address"
                  consumer:
                    "$ref": "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/requests/{defChainId}/{serviceName}/{bindChainId}/{provider}:
    parameters:
    - in: path
      name: defChainId
      description: service defined chain id
      required: true
      type: string
    - in: path
      name: serviceName
      description: service name
      required: true
      type: string
    - in: path
      name: bindChainId
      description: service bound chain id
      required: true
      type: string
    - in: path
      name: provider
      description: service provider address
      required: true
      type: string
    get:
      summary: Query service requests of a provider
      description: Query service requests of a provider
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                def_chain_id:
                  type: string
                def_name:
                  type: string
                bind_chain_id:
                  type: string
                req_chain_id:
                  type: string
                method_id:
                  type: integer
                provider:
                  "$ref": "#/definitions/Address"
                consumer:
                  "$ref": "#/definitions/Address"
                input:
                  type: string
                service_fee:
                  type: array
                  items:
                    "$ref": "#/definitions/Coin"
                profiling:
                  type: boolean
                request_height:
                  type: number
                request_intra_tx_counter:
                  type: number
                expiration_height:
                  type: number
        400:
          description: Bad Request
        204:
          description: No service request
        500:
          description: Internal Server Error

  /service/response:
    post:
      summary: Respond service call
      description: Send transaction to respond a service call
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - name: service_request_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
            req_chain_id:
              type: string
            request_id:
              type: string
            data:
              type: string
            provider:
              "$ref": "#/definitions/Address"
            error_msg:
              type: string
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service response body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/response/{reqChainId}/{reqId}:
    parameters:
    - in: path
      name: reqChainId
      description: service request chain id
      required: true
      type: string
    - in: path
      name: reqId
      description: request id
      required: true
      type: string
    get:
      summary: Query service response
      description: Query service response
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  req_chain_id:
                    type: string
                  request_height:
                    type: integer
                  request_intra_tx_counter:
                    type: integer
                  expiration_height:
                    type: integer
                  provider:
                    "$ref": "#/definitions/Address"
                  consumer:
                    "$ref": "#/definitions/Address"
                  output:
                    type: string
                  error_msg:
                    type: string
        400:
          description: Bad Request
        204:
          description: No service request
        500:
          description: Internal Server Error

  /service/fees/{address}:
    parameters:
    - in: path
      name: address
      description: account address
      required: true
      type: string
    get:
      summary: Query service fees of a address
      description: Query service fees of a address
      tags:
      - ICS25
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              returned_fee:
                type: array
                items:
                  "$ref": "#/definitions/Coin"
              incoming_fee:
                type: array
                items:
                  "$ref": "#/definitions/Coin"
        400:
          description: Bad Request
        204:
          description: No service request
        500:
          description: Internal Server Error

  /service/fees/{address}/refund:
    post:
      summary: Refund service return fee of consumer
      description: Send transaction to refund service return fee of consumer
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: address
        description: address of consumer
        required: true
        type: string
      - name: service_fees_refund_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service fees refund body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

  /service/fees/{address}/withdraw:
    post:
      summary: Withdraw service incoming fee of provider
      description: Send transaction to withdraw service incoming fee of provider
      tags:
      - ICS25
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: async
        description: if true, broadcast transaction asynchronously
        required: false
        type: boolean
      - in: query
        name: commit
        description: if true, response will be returned after the transaction is included in a block.
        required: false
        type: boolean
      - in: query
        name: simulate
        description: if true, ignore the gas field and perform a simulation of a transaction, but don't broadcast it
        required: false
        type: boolean
      - in: query
        name: generate-only
        description: if true, build an unsigned transaction and write it back
        required: false
        type: boolean
      - in: path
        name: address
        description: address of provider
        required: true
        type: string
      - name: service_fees_withdraw_body
        in: body
        required: true
        schema:
          type: object
          properties:
            base_tx:
              "$ref": "#/definitions/BaseTx"
      responses:
        200:
          description: OK
          schema:
            "$ref": "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid service fees withdraw body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error

definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          "$ref": "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
      - ''
      - ''
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          "$ref": "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
      - ''
      - ''
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        $ref: "#/definitions/CheckTxResult"
      deliver_tx:
        $ref: "#/definitions/DeliverTxResult"
      hash:
        $ref: "#/definitions/Hash"
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: object
    properties:
      type:
        type: string
        example: cosmos-sdk/Send
      value:
        type: object
        properties:
          inputs:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
                coins:
                  type: array
                  items:
                    $ref: "#/definitions/Coin"
          outputs:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  example: faa18c9j808qgsvvuf7nz5xer973lwsw07ae3j79zv
                coins:
                  type: array
                  items:
                    $ref: "#/definitions/Coin"
  Address:
    type: string
    description: bech32 encoded address
    example: faa1r93p0tpdlxgpac744rghvj9kqntvd54lc3msk2
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: fva178ja5mcj5agnhyphga9f65nlzu59gcl5ktgte2
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: iris
      amount:
        type: string
        example: "50"
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
      height:
        type: number
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: "0"
          gas_used:
            type: string
            example: "0"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
            example: "10000"
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signatures:
        type: array
        items:
          type: object
          properties:
            signature:
              type: string
              example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            pub_key:
              type: object
              properties:
                type:
                  type: string
                  example: "tendermint/PubKeySecp256k1"
                value:
                  type: string
                  example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
            account_number:
              type: string
              example: "0"
            sequence:
              type: string
              example: "0"
  KeyOutput:
    type: object
    properties:
      name:
        type: string
        example: Main Account
      address:
        type: string
        example: faa1xp8ptallwun6p0hv5ym4adruupc8q5djc95k30
      pub_key:
        type: string
        example: "fap1addwnpepqvfp3mzkvpldhd2m6dzmz3q7rzlfww9yr0x0qy9y9vhak26rvtcf6s93txc"
      type:
        type: string
        example: local
      seed:
        type: string
  BlockID:
    type: object
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: irishub-mainnet
      height:
        type: number
        example: 1
      time:
        type: string
        example: '2017-12-30T05:53:09.287+01:00'
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: '2017-12-30T05:53:09.287+01:00'
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: '7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=='
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  BaseTx:
    type: object
    properties:
      name:
        type: string
      password:
        type: string
        example: "1234567890"
      chain_id:
        type: string
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "0"
      gas:
        type: string
        example: "200000"
      fee:
        type: string
        example: "0.004iris"
      gas_adjustment:
        type: string
        example: "1.2"
  TendermintValidator:
    type: object
    properties:
      address:
        $ref: '#/definitions/ValidatorAddress'
      pub_key:
        type: string
        example: fvp1zcjduepq6td0utl8pgjh9uud5mvev7z9k90562qpj2gq9sjruenmd4ypp62qgtf6ac
      power:
        type: string
        example: "1000"
      accum:
        type: string
        example: "1000"
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      tally_result:
        type: object
        properties:
          yes:
            type: string
          abstain:
            type: string
          no:
            type: string
          no_with_veto:
            type: string
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          "$ref": "#/definitions/Coin"
      voting_start_time:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: string
        example: 10iris
      proposal_id:
        type: integer
      depositor:
        "$ref": "#/definitions/Address"
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: integer
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        $ref: '#/definitions/ValidatorAddress'
      consensus_pubkey:
        type: string
        example: fvp1zcjduepq20pzdy56z2k5ccdzz43g8g7vwfw4pzny3mhz6ckc444fj0avamhsazfp09
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: '0'
      unbonding_height:
        type: string
        example: '0'
      unbonding_time:
        type: string
        example: '1970-01-01T00:00:00Z'
      commission:
        type: object
        properties:
          rate:
            type: string
            example: '0'
          max_rate:
            type: string
            example: '0'
          max_change_rate:
            type: string
            example: '0'
          update_time:
            type: string
            example: '1970-01-01T00:00:00Z'
  Delegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_addr:
        type: string
      shares:
        type: string
      height:
        type: integer
  UnbondingDelegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_addr:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_addr:
        type: string
      validator_src_addr:
        type: string
      validator_dst_addr:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_src:
        type: string
      shares_dst:
        type: string
  DelegationDistInfo:
    type: object
    properties:
      delegator_addr:
        "$ref": "#/definitions/Address"
      val_operator_addr:
        "$ref": "#/definitions/Address"
      del_pool_withdrawal_height:
        type: string
        example: "0"