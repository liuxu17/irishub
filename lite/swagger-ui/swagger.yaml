---
openapi: 3.0.0
info:
  description: >-
    A REST interface for state queries, transaction generation, signing, and
    broadcast.
  version: "0.11.0"
  title: IRISLCD Swagger-UI
  termsOfService: 'https://www.irisnet.org'
  contact:
    name: 边界智能
    url: 'https://bianjie.ai/'
    email: service@bianjie.ai
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: ICS0
    description: 'Tendermint APIs, such as query blocks, transactions and validatorset'
  - name: ICS1
    description: Key management APIs
  - name: ICS20
    description: 'Create, sign and broadcast transactions'
  - name: ICS21
    description: Stake module APIs
  - name: ICS22
    description: Governance module APIs
  - name: ICS23
    description: Slashing module APIs
  - name: ICS24
    description: Distribution module APIs
  - name: ICS25
    description: Service module APIs
  - name: version
    description: Query app version
paths:
  /version:
    get:
      summary: Version of irislcd
      tags:
        - version
      description: Get the version of irislcd running locally to compare against expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.7.0"
  /node_version:
    get:
      summary: Version of the connected node
      tags:
        - version
      description: >-
        Get the version of the SDK running on the connected node to compare
        against expected
      responses:
        '200':
          description: Plaintext version i.e. "v0.7.0"
        '500':
          description: failed to query node version
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - ICS0
      responses:
        '200':
          description: Node status
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  network:
                    type: string
                    example: irishub-mainnet
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: '192.168.56.1:26656'
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.7.0
                  other:
                    description: more information on versions
                    type: array
                    items:
                      type: string
        '500':
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - ICS0
      description: Get if the node is currently syning with other nodes
      responses:
        '200':
          description: node sync status
          content:
            '*/*':
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                    example: false
        '500':
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - ICS0
      responses:
        '200':
          description: The latest block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '500':
          description: Server internal error
  '/blocks/{height}':
    get:
      summary: Get a block at a certain height
      tags:
        - ICS0
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The block at a specific height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - ICS0
      responses:
        '200':
          description: The validator set at the latest block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: number
                  validators:
                    type: array
                    items:
                      $ref: '#/components/schemas/TendermintValidator'
        '500':
          description: Server internal error
  '/validatorsets/{height}':
    get:
      summary: Get a validator set a certain height
      tags:
        - ICS0
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The validator set at a specific block height
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: number
                  validators:
                    type: array
                    items:
                      $ref: '#/components/schemas/TendermintValidator'
        '400':
          description: Invalid height
        '404':
          description: Block at height not available
        '500':
          description: Server internal error
  '/txs/{hash}':
    get:
      summary: Get a Tx by hash
      tags:
        - ICS0
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxQuery'
        '500':
          description: Internal Server Error
  /txs:
    get:
      tags:
        - ICS0
      summary: Search transactions
      description: Search transactions by tag(s).
      parameters:
        - in: query
          name: tags
          description: >-
            Query transactions with tags such as action=send, sender=faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm and recipient=faa1252wk9khhks260shar975x7fswqxltc8tgvtl8, just input {\"action\":\"send\",\"sender\":\"faa1ljemm0yznz58qxxs8xyak7fashcfxf5lssn6jm\",\"recipient\":\"faa1252wk9khhks260shar975x7fswqxltc8tgvtl8\"}
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
        - in: query
          name: page
          description: 'Pagination page, default value 0'
          schema:
            type: integer
        - in: query
          name: size
          description: 'Pagination size, default value 100'
          schema:
            type: integer
      responses:
        '200':
          description: All Tx matching the provided tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TxQuery'
        '400':
          description: Invalid search tags
        '500':
          description: Internal Server Error
    post:
      tags:
        - ICS0
      summary: broadcast Tx
      description: broadcast tx with tendermint rpc
      responses:
        '200':
          description: Broadcast tx result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  type: string
                return:
                  type: string
                  example: block
        description: >-
          Build a StdTx transaction and serilize it to a byte array with amino,
          then the `"tx"` field in the post body will be the base64 encoding of
          the byte array. The supported return types includes `"block"`(return
          after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return
          right away).
        required: true
  /tx/sign:
    post:
      tags:
        - ICS20
      summary: Sign a transation
      description: >-
        Sign a transation providing locally stored account and according
        password, return a StdTx with amino encoding signature and public key
      responses:
        '200':
          description: The signed Tx
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: The Tx was malformated or key doesn't exist
        '401':
          description: Key password is wrong
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
                name:
                  type: string
                password:
                  type: string
                chain_id:
                  type: string
                account_number:
                  type: string
                  example: '0'
                sequence:
                  type: string
                  example: '0'
                append_sig:
                  type: boolean
                  example: true
        description: sign tx
        required: true
  /tx/broadcast:
    post:
      tags:
        - ICS20
      summary: Broadcast a signed StdTx with amino encoding signature and public key
      description: >-
        Broadcast a signed StdTx with amino encoding signature and public key to
        full iris node
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Tx was send and will probably be added to the next block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: The Tx was malformated
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
        description: broadcast tx
        required: true
  /txs/send:
    post:
      summary: Send non-amino encoding transaction
      description: Send non-amino encoding transaction
      tags:
        - ICS20
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                memo:
                  type: string
                fee:
                  type: object
                  properties:
                    gas:
                      type: string
                      example: '10000'
                    amount:
                      type: array
                      items:
                        $ref: '#/components/schemas/Coin'
                msgs:
                  type: array
                  items:
                    $ref: '#/components/schemas/Msg'
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      pub_key:
                        type: string
                      signature:
                        type: string
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
        description: stdTx
        required: true
  '/bank/coin/{coin-type}':
    get:
      tags:
        - ICS20
      summary: Get coin type
      description: Get the detailed information about the given coin type
      parameters:
        - name: coin-type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  desc:
                    type: string
                  min_unit:
                    type: object
                    properties:
                      denom:
                        type: string
                      decimal:
                        type: integer
                  Units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        decimal:
                          type: integer
                  origin:
                    type: integer
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
  /bank/token-stats:
    get:
      tags:
        - ICS20
      summary: Get token statistics
      description: >-
        Get token statistics, such as total loosen token, total bonded token and
        total burned token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loosen_token:
                    type: array
                    items:
                      type: string
                  bonded_token:
                    type: string
                  burned_token:
                    type: array
                    items:
                      type: string
        '500':
          description: Internal Server Error
  '/bank/balances/{address}':
    get:
      summary: Get the account information on blockchain
      tags:
        - ICS20
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coin'
        '204':
          description: No content about this account address
        '500':
          description: Server internel error
  '/bank/accounts/{address}/transfers':
    post:
      summary: Send coins (build -> sign -> send)
      description: Send coins (build -> sign -> send)
      tags:
        - ICS20
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tx was send and will probably be added to the next block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid request
        '401':
          description: Key password is wrong
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                sender:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: string
                  example: 1iris
        description: Parameters to send coins
        required: true
  /bank/burn:
    post:
      summary: Burn coins
      description: Burn coins
      tags:
        - ICS20
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Tx was send and will probably be added to the next block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid request
        '401':
          description: Key password is wrong
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                owner:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: string
                  example: 1iris
        description: Parameters to burn coins
        required: true
  /keys:
    get:
      summary: List of accounts stored locally
      tags:
        - ICS1
      responses:
        '200':
          description: Array of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyOutput'
        '500':
          description: Server internal error
    post:
      summary: Create a new account locally
      tags:
        - ICS1
      responses:
        '200':
          description: Returns account information of the created key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyOutput'
        '400':
          description: Invalid request
        '409':
          description: Key name confliction
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - password
                - seed
              properties:
                name:
                  type: string
                password:
                  type: string
                seed:
                  type: string
        description: The account to create
  /keys/seed:
    get:
      summary: Create a new seed to create a new account with
      tags:
        - ICS1
      responses:
        '200':
          description: 24 word Seed
          content:
            application/json:
              schema:
                type: object
                properties:
                  seed:
                    type: string
                    example: >-
                      blossom pool issue kidney elevator blame furnace winter
                      account merry vessel security depend exact travel bargain
                      problem jelly rural net again mask roast chest
  '/keys/{name}/recover':
    post:
      summary: Recover a account from a seed
      tags:
        - ICS1
      parameters:
        - in: path
          name: name
          description: Account name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns account information of the recovered key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyOutput'
        '400':
          description: Invalid request
        '409':
          description: Key name confliction
        '500':
          description: Server internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - seed
              properties:
                password:
                  type: string
                seed:
                  type: string
        description: Provide password and seed to recover a key
  '/keys/{name}':
    parameters:
      - in: path
        name: name
        description: Account name
        required: true
        schema:
          type: string
    get:
      summary: Get a certain locally stored account
      tags:
        - ICS1
      parameters:
        - in: query
          name: bech
          description: 'Bech32 prefix encoding, valid prefix `"acc"`, `"val"`, `"cons"`'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Locally stored account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyOutput'
        '404':
          description: Key doesn't exist
    put:
      summary: Update the password for this account in the KMS
      tags:
        - ICS1
      responses:
        '200':
          description: Updated password
        '401':
          description: Key password is wrong
        '404':
          description: Key doesn't exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - new_password
                - old_password
              properties:
                new_password:
                  type: string
                old_password:
                  type: string
        description: The new and old password
    delete:
      summary: Remove an account
      tags:
        - ICS1
      responses:
        '200':
          description: Removed account
        '401':
          description: Key password is wrong
        '404':
          description: Key doesn't exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
        description: The password of the account to remove from the KMS
  '/auth/accounts/{address}':
    get:
      summary: Get the account information on blockchain
      tags:
        - ICS1
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      account_number:
                        type: string
                      address:
                        type: string
                      coins:
                        type: array
                        items:
                          $ref: '#/components/schemas/Coin'
                      public_key:
                        type: string
                      sequence:
                        type: string
        '204':
          description: No content about this account address
        '500':
          description: Server internel error
  '/stake/delegators/{delegatorAddr}/delegate':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Submit delegation
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or delegation body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                delegate:
                  type: object
                  properties:
                    validator_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    delegation:
                      type: string
                      example: 10iris
        description: The password of the account to remove from the KMS
  '/stake/delegators/{delegatorAddr}/redelegate':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Submit redelegation
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or delegation body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                redelegate:
                  type: object
                  properties:
                    validator_src_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    validator_dst_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    shares:
                      type: string
                      example: '100'
        description: The password of the account to remove from the KMS
  '/stake/delegators/{delegatorAddr}/unbond':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Submit unbonding
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid delegator address or delegation body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                unbond:
                  type: object
                  properties:
                    validator_addr:
                      $ref: '#/components/schemas/ValidatorAddress'
                    shares:
                      type: string
                      example: '100'
        description: The password of the account to remove from the KMS
  '/stake/delegators/{delegatorAddr}/delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all delegations from a delegator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/redelegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all redelegations from a delegator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Redelegation'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/validators':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/validators/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/txs':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TxQuery'
        '204':
          description: No staking transaction about this delegator address
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/stake/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  /stake/validators:
    get:
      summary: Get all validator candidates
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Validator'
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query the information from a single validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all delegations from a validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnbondingDelegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/stake/validators/{validatorAddr}/redelegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Get all outgoing redelegations from a validator
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Redelegation'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  /stake/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loose_tokens:
                    type: string
                  bonded_tokens:
                    type: string
                  total_supply:
                    type: string
                  bonded_ratio:
                    type: string
        '500':
          description: Internal Server Error
  /stake/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - ICS21
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                  bond_denom:
                    type: string
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorPubKey}/signing_info':
    get:
      summary: Get sign info of given validator
      description: Get sign info of given validator
      tags:
        - ICS23
      parameters:
        - description: Bech32 validator public key
          name: validatorPubKey
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_height:
                    type: string
                  index_offset:
                    type: string
                  jailed_until:
                    type: string
                  missed_blocks_counter:
                    type: string
        '204':
          description: No sign info of this validator
        '400':
          description: Invalid validator public key
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorAddr}/unjail':
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      tags:
        - ICS23
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - description: Bech32 validator operator address
          name: validatorAddr
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid validator address or base_tx
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      tags:
        - ICS22
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid proposal body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  type: string
                  example: Text
                proposer:
                  $ref: '#/components/schemas/Address'
                initial_deposit:
                  type: string
                  example: 10iris
        description: >-
          valid value of `"proposal_type"` can be `"Text"`, `"ParameterChange"`,
          `"SoftwareUpgrade"`
        required: true
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      tags:
        - ICS22
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          schema:
            type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          schema:
            type: string
        - in: query
          name: status
          description: >-
            proposal status, valid values can be `"DepositPeriod"`,
            `"VotingPeriod"`, `"Passed"`, `"Rejected"`
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: 'limit to latest [number] proposals. Defaults to all proposals'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TextProposal'
        '400':
          description: Invalid query parameters
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits':
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      tags:
        - ICS22
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid proposal id or deposit body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                depositor:
                  $ref: '#/components/schemas/Address'
                amount:
                  type: string
                  example: 10iris
        required: true
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      tags:
        - ICS22
      parameters:
        - name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes':
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      tags:
        - ICS22
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid proposal id or vote body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                voter:
                  $ref: '#/components/schemas/Address'
                option:
                  type: string
                  example: 'Yes'
        description: >-
          valid value of `"option"` field can be `"Yes"`, `"No"`, `"NoWithVeto"`
          and `"Abstain"`
        required: true
    get:
      summary: Query voters
      description: Query voters information by proposalId
      tags:
        - ICS22
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vote'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}':
    get:
      summary: Query a proposal
      description: Query a proposal by id
      tags:
        - ICS22
      parameters:
        - name: proposalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextProposal'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits/{depositor}':
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      tags:
        - ICS22
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
        - description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid proposal id or depositor address
        '404':
          description: Found no deposit
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes/{voter}':
    get:
      summary: Query vote
      description: Query vote information by proposalId and voter address
      tags:
        - ICS22
      parameters:
        - description: proposal id
          name: proposalId
          required: true
          in: path
          schema:
            type: string
        - description: Bech32 voter address
          name: voter
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
        '400':
          description: Invalid proposal id or voter address
        '404':
          description: Found no vote
        '500':
          description: Internal Server Error
  /gov/params:
    get:
      summary: Query governance parameters
      description: Query governance parameters
      tags:
        - ICS22
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error

  '/distribution/{delegatorAddr}/withdrawAddress':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Set withdraw address
      tags:
        - ICS24
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid proposal body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                withdraw_address:
                  $ref: '#/components/schemas/Address'
        required: true
    get:
      summary: Query withdraw address
      tags:
        - ICS24
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
        '204':
          description: >-
            No other address have been specified as withdraw address, delegator
            address will be used.
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  /distribution/{delegatorAddr}/withdrawReward:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    post:
      summary: Withdraw rewards
      tags:
        - ICS24
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid proposal body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                validator_address:
                  $ref: '#/components/schemas/Address'
                is_validator:
                  type: boolean
        description: 'if is_validator is true, validator_address should not be presented'
        required: true
  '/distribution/{delegatorAddr}/distrInfo/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        schema:
          type: string
    get:
      summary: Query distribution information for a delegation
      tags:
        - ICS24
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DelegationDistInfo'
        '204':
          description: No content
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/distribution/{delegatorAddr}/distrInfos':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        schema:
          type: string
    get:
      summary: Query distribution information list for a given delegator
      tags:
        - ICS24
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DelegationDistInfo'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/distribution/{validatorAddr}/valDistrInfo':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Validator
        required: true
        schema:
          type: string
    get:
      summary: Query withdraw address
      tags:
        - ICS24
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  operator_addr:
                    type: string
                  fee_pool_withdrawal_height:
                    type: string
                    example: '0'
                  del_accum:
                    type: object
                    properties:
                      update_height:
                        type: string
                        example: '0'
                      accum:
                        type: string
                        example: '0.0000000000'
                  del_pool:
                    type: string
                    example: 0.1iris
                  val_commission:
                    type: string
                    example: 0.1iris
        '204':
          description: Invalid delegator address
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  /service/definition:
    post:
      summary: Add a service definition
      description: Send transaction to define a service
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service define body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                service_name:
                  type: string
                service_description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                idl_content:
                  type: string
                author_addr:
                  $ref: '#/components/schemas/Address'
                author_description:
                  type: string
        required: true
  '/service/definition/{defChainId}/{serviceName}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
    get:
      summary: Query service definition
      description: Query a service definition
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  definition:
                    type: object
                    properties:
                      name:
                        type: string
                      chain_id:
                        type: string
                      description:
                        type: string
                      tags:
                        type: array
                        items:
                          type: string
                      author:
                        type: string
                      author_description:
                        type: string
                      idl_content:
                        type: string
                  methods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        output_privacy:
                          type: string
                        output_cached:
                          type: string
        '204':
          description: No service definition
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /service/binding:
    post:
      summary: Add a service binding
      description: Send transaction to add a binding to a service definition
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service bind body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                def_chain_id:
                  type: string
                service_name:
                  type: string
                binding_type:
                  type: string
                deposit:
                  type: string
                  example: 1iris
                prices:
                  type: array
                  items:
                    type: string
                    example: 1iris
                level:
                  type: object
                  properties:
                    avg_rsp_time:
                      type: integer
                    usable_time:
                      type: integer
                provider:
                  $ref: '#/components/schemas/Address'
        required: true
  '/service/binding/{defChainId}/{serviceName}/{bindChainId}/{provider}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
      - in: path
        name: bindChainId
        description: service bound chain id
        required: true
        schema:
          type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        schema:
          type: string
    get:
      summary: Query service binding
      description: Query a service binding
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      def_name:
                        type: string
                      def_chain_id:
                        type: string
                      bind_chain_id:
                        type: string
                      provider:
                        type: string
                      binding_type:
                        type: string
                      deposit:
                        type: string
                        example: 1iris
                      prices:
                        type: array
                        items:
                          type: string
                          example: 1iris
                      level:
                        type: object
                        properties:
                          avg_rsp_time:
                            type: integer
                          usable_time:
                            type: integer
                      available:
                        type: boolean
                      disable_time:
                        type: string
        '204':
          description: No service binding
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/bindings/{defChainId}/{serviceName}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
    get:
      summary: Query service binding list
      description: Query service binding list
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  properties:
                    type:
                      type: string
                    value:
                      type: object
                      properties:
                        def_name:
                          type: string
                        def_chain_id:
                          type: string
                        bind_chain_id:
                          type: string
                        provider:
                          type: string
                        binding_type:
                          type: string
                        deposit:
                          type: string
                          example: 1iris
                        prices:
                          type: array
                          items:
                            type: string
                            example: 1iris
                        level:
                          type: object
                          properties:
                            avg_rsp_time:
                              type: integer
                            usable_time:
                              type: integer
                        available:
                          type: boolean
                        disable_time:
                          type: string
        '204':
          description: No service binding
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/binding/{defChainId}/{serviceName}/{provider}':
    put:
      summary: Update a service binding
      description: Send transaction to update a service binding
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service binding update body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                def_chain_id:
                  type: string
                service_name:
                  type: string
                binding_type:
                  type: string
                deposit:
                  type: string
                  example: 1iris
                prices:
                  type: array
                  items:
                    type: string
                    example: 1iris
                level:
                  type: object
                  properties:
                    avg_rsp_time:
                      type: integer
                    usable_time:
                      type: integer
        required: true
  '/service/binding/{defChainId}/{serviceName}/{provider}/disable':
    put:
      summary: Disable service binding
      description: Send transaction to diasble a service binding
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service binding disable body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  '/service/binding/{defChainId}/{serviceName}/{provider}/enable':
    put:
      summary: Enable service binding
      description: Send transaction to enable a service binding
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service binding enable body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                deposit:
                  type: string
                  example: 1iris
        required: true
  '/service/binding/{defChainId}/{serviceName}/{provider}/deposit/refund':
    put:
      summary: Refund deposit from a service binding
      description: Send transaction to refund deposit from a service binding
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service binding deposit refund body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  /service/request:
    post:
      summary: Call service
      description: Send transaction to call a method of service which a provider bound it
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                requests:
                  type: array
                  items:
                    properties:
                      def_chain_id:
                        type: string
                      service_name:
                        type: string
                      bind_chain_id:
                        type: string
                      method_id:
                        type: integer
                      service_fee:
                        type: string
                        example: 1iris
                      data:
                        type: string
                      provider:
                        $ref: '#/components/schemas/Address'
                      consumer:
                        $ref: '#/components/schemas/Address'
        required: true
  '/service/requests/{defChainId}/{serviceName}/{bindChainId}/{provider}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
      - in: path
        name: bindChainId
        description: service bound chain id
        required: true
        schema:
          type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        schema:
          type: string
    get:
      summary: Query service requests of a provider
      description: Query service requests of a provider
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    def_chain_id:
                      type: string
                    def_name:
                      type: string
                    bind_chain_id:
                      type: string
                    req_chain_id:
                      type: string
                    method_id:
                      type: integer
                    provider:
                      $ref: '#/components/schemas/Address'
                    consumer:
                      $ref: '#/components/schemas/Address'
                    input:
                      type: string
                    service_fee:
                      type: array
                      items:
                        $ref: '#/components/schemas/Coin'
                    profiling:
                      type: boolean
                    request_height:
                      type: number
                    request_intra_tx_counter:
                      type: number
                    expiration_height:
                      type: number
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /service/response:
    post:
      summary: Respond service call
      description: Send transaction to respond a service call
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service response body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_tx:
                  $ref: '#/components/schemas/BaseTx'
                req_chain_id:
                  type: string
                request_id:
                  type: string
                data:
                  type: string
                provider:
                  $ref: '#/components/schemas/Address'
                error_msg:
                  type: string
        required: true
  '/service/response/{reqChainId}/{reqId}':
    parameters:
      - in: path
        name: reqChainId
        description: service request chain id
        required: true
        schema:
          type: string
      - in: path
        name: reqId
        description: request id
        required: true
        schema:
          type: string
    get:
      summary: Query service response
      description: Query service response
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      req_chain_id:
                        type: string
                      request_height:
                        type: integer
                      request_intra_tx_counter:
                        type: integer
                      expiration_height:
                        type: integer
                      provider:
                        $ref: '#/components/schemas/Address'
                      consumer:
                        $ref: '#/components/schemas/Address'
                      output:
                        type: string
                      error_msg:
                        type: string
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/fees/{address}':
    parameters:
      - in: path
        name: address
        description: account address
        required: true
        schema:
          type: string
    get:
      summary: Query service fees of a address
      description: Query service fees of a address
      tags:
        - ICS25
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  returned_fee:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
                  incoming_fee:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/fees/{address}/refund':
    post:
      summary: Refund service return fee of consumer
      description: Send transaction to refund service return fee of consumer
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: address
          description: address of consumer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service fees refund body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  '/service/fees/{address}/withdraw':
    post:
      summary: Withdraw service incoming fee of provider
      description: Send transaction to withdraw service incoming fee of provider
      tags:
        - ICS25
      parameters:
        - in: query
          name: async
          description: 'if true, broadcast transaction asynchronously'
          required: false
          schema:
            type: boolean
        - in: query
          name: commit
          description: >-
            if true, response will be returned after the transaction is included
            in a block.
          required: false
          schema:
            type: boolean
        - in: query
          name: simulate
          description: >-
            if true, ignore the gas field and perform a simulation of a
            transaction, but don't broadcast it
          required: false
          schema:
            type: boolean
        - in: query
          name: generate-only
          description: 'if true, build an unsigned transaction and write it back'
          required: false
          schema:
            type: boolean
        - in: path
          name: address
          description: address of provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '400':
          description: Invalid service fees withdraw body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
components:
  requestBodies:
    Unjailbody:
      content:
        application/json:
          schema:
            type: object
            properties:
              base_tx:
                $ref: '#/components/schemas/BaseTx'
      required: true
  schemas:
    CheckTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    DeliverTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    BroadcastTxCommitResult:
      type: object
      properties:
        check_tx:
          $ref: '#/components/schemas/CheckTxResult'
        deliver_tx:
          $ref: '#/components/schemas/DeliverTxResult'
        hash:
          $ref: '#/components/schemas/Hash'
        height:
          type: integer
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Msg:
      type: object
      properties:
        type:
          type: string
          example: irishub/bank/Send
        value:
          type: object
          properties:
            inputs:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    example: faa1ezzh0humhy3329xg4avhcjtay985nll0zswc5j
                  coins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
            outputs:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    example: faa18c9j808qgsvvuf7nz5xer973lwsw07ae3j79zv
                  coins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coin'
    Address:
      type: string
      description: bech32 encoded address
      example: faa1r93p0tpdlxgpac744rghvj9kqntvd54lc3msk2
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: fva178ja5mcj5agnhyphga9f65nlzu59gcl5ktgte2
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: iris
        amount:
          type: string
          example: '50'
    Hash:
      type: string
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
    TxQuery:
      type: object
      properties:
        hash:
          type: string
        height:
          type: number
        tx:
          $ref: '#/components/schemas/StdTx'
        result:
          type: object
          properties:
            log:
              type: string
            gas_wanted:
              type: string
              example: '0'
            gas_used:
              type: string
              example: '0'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/KVPair'
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            $ref: '#/components/schemas/Msg'
        fee:
          type: object
          properties:
            gas:
              type: string
              example: '10000'
            amount:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
        memo:
          type: string
        signatures:
          type: array
          items:
            type: object
            properties:
              signature:
                type: string
                example: >-
                  MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: object
                properties:
                  type:
                    type: string
                    example: tendermint/PubKeySecp256k1
                  value:
                    type: string
                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
              account_number:
                type: string
                example: '0'
              sequence:
                type: string
                example: '0'
    KeyOutput:
      type: object
      properties:
        name:
          type: string
          example: Main Account
        address:
          type: string
          example: faa1xp8ptallwun6p0hv5ym4adruupc8q5djc95k30
        pub_key:
          type: string
          example: >-
            fap1addwnpepqvfp3mzkvpldhd2m6dzmz3q7rzlfww9yr0x0qy9y9vhak26rvtcf6s93txc
        type:
          type: string
          example: local
        seed:
          type: string
    BlockID:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/Hash'
        parts:
          type: object
          properties:
            total:
              type: number
              example: 0
            hash:
              $ref: '#/components/schemas/Hash'
    BlockHeader:
      type: object
      properties:
        chain_id:
          type: string
          example: irishub-mainnet
        height:
          type: number
          example: 1
        time:
          type: string
          example: '2017-12-30T05:53:09.287+01:00'
        num_txs:
          type: number
          example: 0
        last_block_id:
          $ref: '#/components/schemas/BlockID'
        total_txs:
          type: number
          example: 35
        last_commit_hash:
          $ref: '#/components/schemas/Hash'
        data_hash:
          $ref: '#/components/schemas/Hash'
        validators_hash:
          $ref: '#/components/schemas/Hash'
        next_validators_hash:
          $ref: '#/components/schemas/Hash'
        consensus_hash:
          $ref: '#/components/schemas/Hash'
        app_hash:
          $ref: '#/components/schemas/Hash'
        last_results_hash:
          $ref: '#/components/schemas/Hash'
        evidence_hash:
          $ref: '#/components/schemas/Hash'
        proposer_address:
          $ref: '#/components/schemas/Address'
    Block:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        txs:
          type: array
          items:
            type: string
        evidence:
          type: array
          items:
            type: string
        last_commit:
          type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            precommits:
              type: array
              items:
                type: object
                properties:
                  validator_address:
                    type: string
                  validator_index:
                    type: string
                    example: '0'
                  height:
                    type: string
                    example: '0'
                  round:
                    type: string
                    example: '0'
                  timestamp:
                    type: string
                    example: '2017-12-30T05:53:09.287+01:00'
                  type:
                    type: number
                    example: 2
                  block_id:
                    $ref: '#/components/schemas/BlockID'
                  signature:
                    type: string
                    example: >-
                      7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    BlockQuery:
      type: object
      properties:
        block_meta:
          type: object
          properties:
            header:
              $ref: '#/components/schemas/BlockHeader'
            block_id:
              $ref: '#/components/schemas/BlockID'
        block:
          $ref: '#/components/schemas/Block'
    BaseTx:
      type: object
      properties:
        name:
          type: string
          example: faucet
        password:
          type: string
          example: '1234567890'
        chain_id:
          type: string
          example: irishub-test
        account_number:
          type: string
          example: '0'
        sequence:
          type: string
          example: '0'
        gas:
          type: string
          example: '200000'
        fee:
          type: string
          example: 0.004iris
        gas_adjustment:
          type: string
          example: '1.2'
    TendermintValidator:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ValidatorAddress'
        pub_key:
          type: string
          example: >-
            fvp1zcjduepq6td0utl8pgjh9uud5mvev7z9k90562qpj2gq9sjruenmd4ypp62qgtf6ac
        power:
          type: string
          example: '1000'
        accum:
          type: string
          example: '1000'
    TextProposal:
      type: object
      properties:
        proposal_id:
          type: integer
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
        proposal_status:
          type: string
        tally_result:
          type: object
          properties:
            'yes':
              type: string
            abstain:
              type: string
            'no':
              type: string
            no_with_veto:
              type: string
        submit_time:
          type: string
        total_deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        voting_start_time:
          type: string
    Deposit:
      type: object
      properties:
        amount:
          type: string
          example: 10iris
        proposal_id:
          type: integer
        depositor:
          $ref: '#/components/schemas/Address'
    Vote:
      type: object
      properties:
        voter:
          type: string
        proposal_id:
          type: integer
        option:
          type: string
    Validator:
      type: object
      properties:
        operator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        consensus_pubkey:
          type: string
          example: >-
            fvp1zcjduepq20pzdy56z2k5ccdzz43g8g7vwfw4pzny3mhz6ckc444fj0avamhsazfp09
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          type: object
          properties:
            moniker:
              type: string
            identity:
              type: string
            website:
              type: string
            details:
              type: string
        bond_height:
          type: string
          example: '0'
        unbonding_height:
          type: string
          example: '0'
        unbonding_time:
          type: string
          example: '1970-01-01T00:00:00Z'
        commission:
          type: object
          properties:
            rate:
              type: string
              example: '0'
            max_rate:
              type: string
              example: '0'
            max_change_rate:
              type: string
              example: '0'
            update_time:
              type: string
              example: '1970-01-01T00:00:00Z'
    Delegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_addr:
          type: string
        shares:
          type: string
        height:
          type: integer
    UnbondingDelegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_addr:
          type: string
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
    Redelegation:
      type: object
      properties:
        delegator_addr:
          type: string
        validator_src_addr:
          type: string
        validator_dst_addr:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_src:
          type: string
        shares_dst:
          type: string
    DelegationDistInfo:
      type: object
      properties:
        delegator_addr:
          $ref: '#/components/schemas/Address'
        val_operator_addr:
          $ref: '#/components/schemas/Address'
        del_pool_withdrawal_height:
          type: string
          example: '0'